{"version":3,"sources":["main.js","navbar.js","togglesections.js"],"names":["readCourses","fetch","data","forEach","json","then","a","coursename","course","endyear","endmonth","c","startyear","divstart","startmonth","colopen","colclose","document","getElementById","innerHTML","job","b","d","e","f","readJobs","outputEl","workplace","title","website","imagelink","divwrap","link","style","button","addEventListener","hamlinks","res","url","description","concat","classList","toggle","spanclose","backgroundImage","backgroundColor","navbar","querySelector","querySelectorAll","x","education","educationspan","edlinks","hideAll","work","workspan","worklinks","portfolio","portfoliospan","portfoliolinks","contains"],"mappings":"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","file":"main.js","sourcesContent":["\r\n\r\n// Reads the courses table via Fetch\r\nfunction readCourses() {\r\n\r\nfetch('http://studenter.miun.se/~nipa1902/writeable/dt173g/projekt/api/courses.php')\r\n\r\n.then(res => res.json())\r\n\r\n    .then(data => {\r\n        data.forEach(course => {\r\n\r\n        // Store object properties as variables\r\n            let a = course.institution;\r\n            let b = course.coursename;\r\n            let c = course.startyear;\r\n            let d = course.startmonth;\r\n            let e = course.endyear;\r\n            let f = course.endmonth;\r\n\r\n\r\n            // Store html string\r\n            let divstart = \"<div class='grid-item'>\";\r\n            let colopen = \"<div class='inner-grid-item'>\";\r\n            let colclose = \"</div>\";\r\n            \r\n            // Locate output element\r\n            let outputEl = document.getElementById(\"educationoutput\");\r\n            \r\n            //Print\r\n            outputEl.innerHTML +=  \r\n                            divstart + \r\n                            colopen + a + colclose +\r\n                            colopen + b + colclose +\r\n                            colopen + c + \"/\" + d + \" - \" +\r\n                             + e + \"/\" + f + colclose;\r\n        })\r\n    })\r\n\r\n\r\n}\r\n\r\n// Reads the jobs table via Fetch\r\nfunction readJobs() {\r\n    \r\nfetch('http://studenter.miun.se/~nipa1902/writeable/dt173g/projekt/api/jobs.php')\r\n\r\n.then(res => res.json())\r\n\r\n    .then(data => {\r\n        data.forEach(job => {\r\n\r\n        // Store object properties as variables\r\n\r\n            let a = job.workplace;\r\n            let b = job.title;\r\n            let c = job.startyear;\r\n            let d = job.startmonth;\r\n            let e = job.endyear;\r\n            let f = job.endmonth;\r\n\r\n            // Store html string\r\n            let divstart = \"<div class='grid-item'>\";\r\n            let colopen = \"<div class='inner-grid-item'>\";\r\n            let colclose = \"</div>\";\r\n            \r\n            // Locate output element\r\n            let outputEl = document.getElementById(\"workoutput\");\r\n            \r\n            //Print\r\n            outputEl.innerHTML +=  \r\n                            divstart + \r\n                            colopen + a + colclose +\r\n                            colopen + b + colclose +\r\n                            colopen + c + \"/\" + d + \" - \" +\r\n                             + e + \"/\" + f + colclose;\r\n\r\n\r\n        })\r\n    })\r\n\r\n}\r\n\r\n// Reads the websites table via Fetch\r\nfunction readWebsites() {\r\n\r\n    \r\nfetch('http://studenter.miun.se/~nipa1902/writeable/dt173g/projekt/api/websites.php')\r\n\r\n.then(res => res.json())\r\n\r\n    .then(data => {\r\n        data.forEach(website => {\r\n\r\n        // Store object properties as variables\r\n\r\n            let a = website.title;\r\n            let b = website.url;\r\n            let c = website.description;\r\n            let d = website.imagelink;\r\n\r\n            // We take database ID to use as a unique number for BG styling, but manipulate the number\r\n            let e = website.id * 19;\r\n\r\n            // Store html string\r\n            let divwrap = \"<div class=wrapper>\";\r\n            let divstart = `<span id='${e}' class='grid-item portfolio-item'> `;\r\n            let link = `<a class='portfolio-link' title='${a}' href=${b}>`;\r\n            let colopen = \"<span class='inner-grid-item'>\";\r\n            let spanclose = \"</span>\";\r\n            \r\n            // Locate output element\r\n            let outputEl = document.getElementById(\"websitesoutput\");\r\n            \r\n            //Print\r\n            outputEl.innerHTML +=  \r\n\r\n                divwrap + link + divstart +\r\n                colopen + \"<h3>\" + a + \"</h3>\" + spanclose +\r\n                colopen + \"<p>\" + c + \"</p>\" + spanclose + spanclose + \"</a> </div>\";\r\n\r\n                            document.getElementById(`${e}`).style.backgroundImage = `url('${d}')`;\r\n                            document.getElementById(`${e}`).style.backgroundColor = \"white\";\r\n\r\n        })\r\n    })\r\n\r\n    \r\n}","let navbar = document.querySelector(\"nav#nav-hamburger\");\r\nlet button = document.querySelector(\"button#hamburger-toggle\");\r\n\r\nbutton.addEventListener('click', function() {\r\n    navbar.classList.toggle(\"showNav\");\r\n    button.classList.toggle(\"closeNav\");\r\n});\r\n\r\n// Puts an event listener on each nav-link so that when clicking them you close ham nav\r\nlet hamlinks = document.querySelectorAll(\".hamburger-links\");\r\n\r\n// Due most likely to the punishment of God, if I do not use anonymous functions the transpilation in babel does not work, so we have to repeat the classList toggles\r\nhamlinks.forEach((x) => {\r\n    x.addEventListener('click', function() {\r\n        navbar.classList.toggle(\"showNav\");\r\n        button.classList.toggle(\"closeNav\");\r\n})});","// Perhaps we could make one function for making the event-listener and pass the elements as variable-arguments\r\n\r\n\r\n// I select education to be shown\r\n// We grab the three elements we need: one is the section, one is the span that controls clicks, one a cluster of link items\r\nlet education = document.getElementById(\"education\");\r\nlet educationspan = document.getElementById(\"displayeducation\");\r\nlet edlinks = document.querySelectorAll(\".educationlink\");\r\n\r\n// Adds click-to-show functionality to all the links (menu items + span)\r\nedlinks.forEach((x) => {\r\n    x.addEventListener(\"click\", function() {\r\n        hideAll();\r\n        education.classList.toggle(\"hide-element\");\r\n        educationspan.classList.toggle(\"active\");\r\n})});\r\n\r\n\r\n\r\n// Same code for WORK\r\nlet work = document.getElementById(\"work\");\r\nlet workspan = document.getElementById(\"displaywork\");\r\n\r\nlet worklinks = document.querySelectorAll(\".worklink\");\r\nworklinks.forEach((x) => {\r\n\r\n    x.addEventListener(\"click\", function() {\r\n        hideAll();\r\n        work.classList.toggle(\"hide-element\");\r\n        workspan.classList.toggle(\"active\");\r\n})});\r\n\r\n\r\n\r\n// Same code for PORTFOLIO\r\nlet portfolio = document.getElementById(\"portfolio\");\r\nlet portfoliospan = document.getElementById(\"displayportfolio\");\r\nlet portfoliolinks = document.querySelectorAll(\".portfoliolink\");\r\n\r\nportfoliolinks.forEach((x) => {\r\n    x.addEventListener(\"click\", function() {\r\n        hideAll();\r\n        portfolio.classList.toggle(\"hide-element\");\r\n        portfoliospan.classList.toggle(\"active\");\r\n})});\r\n\r\n\r\n// Hide active class from all spans\r\nfunction hideAll() {\r\n    let spans = document.querySelectorAll(\".active\");\r\n        spans.forEach((x) => {\r\n        x.classList.toggle(\"active\");\r\n    })\r\n\r\n    // Hide whatever output div we did not click on\r\n    let outputdivs = document.querySelectorAll(\".output-div\");\r\n\r\n    outputdivs.forEach((x) => {\r\n    if (!x.classList.contains(\"hide-element\")) {\r\n        x.classList.toggle(\"hide-element\");\r\n    }\r\n    })\r\n\r\n};\r\n\r\n"]}